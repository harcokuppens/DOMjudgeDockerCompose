#!/bin/bash

#TODO: after checking  tail contains completed  compress the backup dump with gzip!!
#TODO: exclude big tables => verify if they really cam be skippped
#        docker exec -t mariadb /bin/bash -c '/usr/bin/mariadb-dump --ignore-table-data domjudge.judging_run_output --ignore-table-data domjudge.testcase_content --skip-quick --user root -p$MYSQL_ROOT_PASSWORD $MYSQL_DATABASE' >$dumpfile



# Define usage information
USAGE="Usage: $(basename "$0") [-h|--help] FILEPATH

Restore the domjudge MariaDB database from a dumpfile 

Options:
  -h, --help    Display this help message and exit.

Arguments:
  FILEPATH      The path where the database dump file will is located.
"

info() {
   echo "INFO: $@" 1>&2
}
error() {
   echo "ERROR: $@" 1>&2
}

# Parse command line options
while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do
  case $1 in
    -h | --help )
      echo "$USAGE"
      exit
      ;;
    * )
      error "Unknown option: $1"
      error "$USAGE"
      exit 1
      ;;
  esac
  shift
done



dumpfile="$1"

if [[ -z "$dumpfile" ]]; then
      error "Missing the dumpfile argument." 
      error "$USAGE"
      exit 1
fi      

if [[ -f "$dumpfile" ]]; then
    echo "Restoring from the dumpfile '$dumpfile'" >&2
else
    echo "The dumpfile '$dumpfile' does not exist." >&2
    exit 1
fi

# check mariadb service is running
if ! docker ps | grep -q mariadb; then
    echo "ERROR: no mariadb docker process running" >&2
    exit 1
fi

# environment variables MYSQL_ROOT_PASSWORD and MYSQL_DATABASE set in docker-compose.yml
#docker exec -t mariadb /bin/bash -c '/usr/bin/mariadb-dump --user root --max-allowed-packet='"$MAX_PACKET_SIZE"'  -p$MYSQL_ROOT_PASSWORD $MYSQL_DATABASE' < $dumpfile
cat sdf
exit_status=$?
if [[ $exit_status -ne 0 ]]; then
    echo "ERROR: restoring mariadb database failed" >&2
    exit $exit_status
else
    echo "INFO: dumping mariadb database succesful" >&2
fi
